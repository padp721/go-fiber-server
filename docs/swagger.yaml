basePath: /api
definitions:
  employee.EmployeeField:
    properties:
      address:
        example: Jl. Siulan
        type: string
      name:
        example: Angga
        type: string
      phone:
        example: "0876543219"
        type: string
    type: object
  responses.Data:
    properties:
      data: {}
      responseCode:
        example: 200
        type: integer
      responseMessage:
        example: Berhasil mengambil data.
        type: string
    type: object
  responses.Default:
    properties:
      responseCode:
        example: 200
        type: integer
      responseMessage:
        example: Berhasil mengambil data.
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GO FIBER SERVER (Go v1.21.1)
  version: "1.0"
paths:
  /:
    get:
      description: return hello world string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Default'
      summary: Show hello world
      tags:
      - Hello World
  /employee:
    get:
      description: Get all employees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
      summary: Show All Employees
      tags:
      - Employee
    post:
      consumes:
      - application/json
      description: Add new employee
      parameters:
      - description: New Employee
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/employee.EmployeeField'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Default'
      summary: Add Employee
      tags:
      - Employee
  /employee/{id}:
    delete:
      description: Delete employee by Id
      parameters:
      - description: Employee Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Default'
      summary: Delete Employee
      tags:
      - Employee
    get:
      description: Get employee by Id
      parameters:
      - description: Employee Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
      summary: Show Employee by Id
      tags:
      - Employee
    put:
      consumes:
      - application/json
      description: Update employee data
      parameters:
      - description: Employee Id
        in: path
        name: id
        required: true
        type: string
      - description: New Employee Data
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/employee.EmployeeField'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Default'
      summary: Update Employee
      tags:
      - Employee
  /params/{value}:
    get:
      description: return greetings with sent parameter
      parameters:
      - description: 'Greetings to:'
        in: path
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Default'
      summary: Show greetings
      tags:
      - Hello World
schemes:
- http
- https
swagger: "2.0"
